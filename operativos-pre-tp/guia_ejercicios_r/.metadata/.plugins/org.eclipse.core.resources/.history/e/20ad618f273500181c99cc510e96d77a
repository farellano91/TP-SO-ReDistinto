/*
 * archivo.c
 *
 *  Created on: 31/3/2018
 *      Author: utnso
 */
#include "archivo.h"


FILE* txt_open_file(char* path, char* condicion) {
	return fopen(path,condicion);
}

//caso donde cada linea tiene como maximo 30 caracteres
void txt_carga_inicial(FILE* file){
	int i;
	for(i = 0; i < 10; i++){
		char* fila = malloc(sizeof(char) * 21);
		strcpy(fila,"nota1\0");
//		sprintf(fila,"Linea: %d\n",i);
		fila[20] = '\n';
		fwrite(fila,sizeof(char),21,file);
		free(fila);
	}


}

void txt_close_file(FILE* file) {
	fclose(file);
}

void txt_read_all(FILE* file){
//	char* line = malloc(sizeof(char)*31);
//	size_t maxl = 31;
//
//	while (fgets(line, maxl, file)) {
//		while(line[strlen(line) - 1] != '\n' && line[strlen(line) - 1] != '\r'){
//			char *tmp = realloc (line, 2 * maxl * sizeof(char));
//
//			fseek(file,0,SEEK_SET);          //or wherever you want to seek to
//			if (tmp) {
//				line = tmp;
//				maxl *= 2;
//				fgets(line, maxl, file);
//			}
//			else{
//				printf("Not enough memory for this line!!\n");
//			}
//		}
//		printf("%s",line);
//	}

	char* line = malloc(sizeof(char)*21);
	fread();
	while(!feof(file)){
		printf("%s",fila);

	}
}

void txt_read_especific_line(FILE* file, int line_number){
	//Posiciona al puntero en el registro pedido
	//1 archivo, 2 posicion x tamaÃ±o de cada linea, 3 SEEK_SET
	fseek(file,line_number*31,SEEK_SET);
	char * fila = malloc(sizeof(char)*31);
	fgets(fila, 31, file);
	printf("Fila: %s\n",fila);


}
